{"ast":null,"code":"var _jsxFileName = \"D:\\\\Digit_Recognition_Env\\\\mnist-digit-recognition\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [imagePreview, setImagePreview] = useState('');\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n\n    // Create a preview URL for the uploaded image\n    if (file) {\n      const previewUrl = URL.createObjectURL(file);\n      setImagePreview(previewUrl);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a file before uploading.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPrediction(data.prediction); // Update state with the prediction\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to fetch prediction. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload an Image for Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"file-input-label\",\n      htmlFor: \"file-input\",\n      children: [\"Choose a file\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-input\",\n        onChange: handleFileChange,\n        style: {\n          display: 'none'\n        } // Hide the input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Uploaded Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Uploaded\",\n        className: \"preview-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"prediction\",\n      children: [\"Predicted Digit: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I5F5/kSZ3DzdIfyavyq5GesHfKE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","prediction","setPrediction","imagePreview","setImagePreview","handleFileChange","event","file","target","files","previewUrl","URL","createObjectURL","handleUpload","alert","formData","FormData","append","response","fetch","method","body","ok","Error","status","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","style","display","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/Digit_Recognition_Env/mnist-digit-recognition/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [imagePreview, setImagePreview] = useState('');\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n\n    // Create a preview URL for the uploaded image\n    if (file) {\n      const previewUrl = URL.createObjectURL(file);\n      setImagePreview(previewUrl);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a file before uploading.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setPrediction(data.prediction); // Update state with the prediction\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to fetch prediction. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Upload an Image for Prediction</h1>\n      <label className=\"file-input-label\" htmlFor=\"file-input\">\n        Choose a file\n        <input\n          type=\"file\"\n          id=\"file-input\"\n          onChange={handleFileChange}\n          style={{ display: 'none' }} // Hide the input\n        />\n      </label>\n      <button className=\"upload-button\" onClick={handleUpload}>Upload</button>\n      {imagePreview && (\n        <div className=\"image-preview\">\n          <h2>Uploaded Image:</h2>\n          <img\n            src={imagePreview}\n            alt=\"Uploaded\"\n            className=\"preview-image\"\n          />\n        </div>\n      )}\n      {prediction && <h2 className=\"prediction\">Predicted Digit: {prediction}</h2>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}