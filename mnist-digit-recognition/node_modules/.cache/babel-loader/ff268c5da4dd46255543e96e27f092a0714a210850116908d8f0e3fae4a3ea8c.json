{"ast":null,"code":"var _jsxFileName = \"D:\\\\Digit_Recognition_Env\\\\mnist-digit-recognition\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    const response = await fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await response.json();\n    setPrediction(data.prediction); // Update state with the prediction\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload an Image for Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Predicted Digit: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UHhou3VZnWH74k0LHiwAcFntNYE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","prediction","setPrediction","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/Digit_Recognition_Env/mnist-digit-recognition/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState('');\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    const response = await fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const data = await response.json();\n    setPrediction(data.prediction); // Update state with the prediction\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Upload an Image for Prediction</h1>\n      <input type=\"file\" accept=\"image/png\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload</button>\n      {prediction && <h2>Predicted Digit: {prediction}</h2>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,YAAY,CAAC;IAErC,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCd,aAAa,CAACa,IAAI,CAACd,UAAU,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACEL,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,WAAW;MAACC,QAAQ,EAAEtB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpE1B,OAAA;MAAQ8B,OAAO,EAAEnB,YAAa;MAAAW,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CrB,UAAU,iBAAIL,OAAA;MAAAsB,QAAA,GAAI,mBAAiB,EAACjB,UAAU;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACxB,EAAA,CA7BQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}